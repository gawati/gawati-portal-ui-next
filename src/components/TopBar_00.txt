import React from 'react';
import { NavLink } from 'react-router-dom';
import Autocomplete from 'react-autocomplete';
import axios from 'axios';

import {stringCut} from '../utils/generalhelper';
import {apiGetCall} from '../api.js';

import mainLogo from '../images/logo.png';
import mobileButton from '../images/th-menu.png';

import '../css/SiteSearchAutoComplete.css';

const Logo = () =>
    <NavLink className="nav-brand" to="/">
    <img alt="AIF" src={mainLogo} width="75"/>
    </NavLink>
    ;

const SiteHeading = () =>
    <div className="logotype">
        <h1>African Law Library</h1>
        <h2>innovative access to law</h2>
    </div>
    ;

const theListItems = () =>  [{ abbr: 'AL', name: 'Alabama' }, { abbr: 'AK', name: 'Alaska' }, { abbr: 'AZ', name: 'Arizona' }, { abbr: 'AR', name: 'Arkansas' }, { abbr: 'CA', name: 'California' }, { abbr: 'CO', name: 'Colorado' }, { abbr: 'CT', name: 'Connecticut' }, { abbr: 'DE', name: 'Delaware' }, { abbr: 'FL', name: 'Florida' }, { abbr: 'GA', name: 'Georgia' }, { abbr: 'HI', name: 'Hawaii' }, { abbr: 'ID', name: 'Idaho' }, { abbr: 'IL', name: 'Illinois' }, { abbr: 'IN', name: 'Indiana' }, { abbr: 'IA', name: 'Iowa' }, { abbr: 'KS', name: 'Kansas' }, { abbr: 'KY', name: 'Kentucky' }, { abbr: 'LA', name: 'Louisiana' }, { abbr: 'ME', name: 'Maine' }, { abbr: 'MD', name: 'Maryland' }, { abbr: 'MA', name: 'Massachusetts' }, { abbr: 'MI', name: 'Michigan' }, { abbr: 'MN', name: 'Minnesota' }, { abbr: 'MS', name: 'Mississippi' }, { abbr: 'MO', name: 'Missouri' }, { abbr: 'MT', name: 'Montana' }, { abbr: 'NE', name: 'Nebraska' }, { abbr: 'NV', name: 'Nevada' }, { abbr: 'NH', name: 'New Hampshire' }, { abbr: 'NJ', name: 'New Jersey' }, { abbr: 'NM', name: 'New Mexico' }, { abbr: 'NY', name: 'New York' }, { abbr: 'NC', name: 'North Carolina' }, { abbr: 'ND', name: 'North Dakota' }, { abbr: 'OH', name: 'Ohio' }, { abbr: 'OK', name: 'Oklahoma' }, { abbr: 'OR', name: 'Oregon' }, { abbr: 'PA', name: 'Pennsylvania' }, { abbr: 'RI', name: 'Rhode Island' }, { abbr: 'SC', name: 'South Carolina' }, { abbr: 'SD', name: 'South Dakota' }, { abbr: 'TN', name: 'Tennessee' }, { abbr: 'TX', name: 'Texas' }, { abbr: 'UT', name: 'Utah' }, { abbr: 'VT', name: 'Vermont' }, { abbr: 'VA', name: 'Virginia' }, { abbr: 'WA', name: 'Washington' }, { abbr: 'WV', name: 'West Virginia' }, { abbr: 'WI', name: 'Wisconsin' }, { abbr: 'WY', name: 'Wyoming' }];

const fakeRequest = (value, cb)  => {
    return setTimeout(cb, 500, value ? theListItems().filter(function (state) {
      return matchStateToTerm(state, value);
    }) : theListItems());
  };

const matchStateToTerm = (state, value) => {
    return state.name.toLowerCase().indexOf(value.toLowerCase()) !== -1 || state.abbr.toLowerCase().indexOf(value.toLowerCase()) !== -1;
  };
  
  


class SiteSearchAutocomplete extends React.Component {
    constructor(props) {
        console.log( " list itmes ", theListItems());
        super(props);
        this.requestTimer = null;
        this.state = {
            value: '',
            listItems : theListItems()
        }
    }

    acValue = () => this.state.value ;

    acItems = () => this.state.listItems ;

    getItemValue = (item) => item ;
    
    onSelect = (value, item) => {
        // set the menu to only the selected item
        this.setState({ value, listItems: [ item ] })
        // or you could reset it to a default list again
        // this.setState({ unitedStates: getStates() })
    };

    onChange = (event, value) => {
        this.setState({ value })
        clearTimeout(this.requestTimer)
        this.requestTimer = fakeRequest(value, (items) => {
          this.setState({ listItems: items })
        })
    };

    renderMenu = (children) => (
          <div className="menu">
            {children}
          </div>
    );

    renderItem = (item, isHighlighted) => (
        <div
          className={`item ${isHighlighted ? 'item-highlighted' : ''}`}
          key={item.abbr}
        >{item.name}</div>
      );

    render() {
        return (
        <Autocomplete
        inputProps={{ id: 'states-autocomplete' }}
        wrapperStyle={{ position: 'relative', display: 'inline-block' }}
        value={this.acValue()}
        items={this.acItems()}
        getItemValue={this.getItemValue}
        onSelect={this.onSelect}
        onChange={this.onChange}
        renderMenu={this.renderMenu}
        renderItem={this.renderItem}
      />);
    }

}
    


const SearchBox = () =>
    <div className={ `search-form-container col-6` }>
        <form className="search-form" data-name="Email Form" id="email-form" name="email-form">
            <div className="div-block w-clearfix">

                <SiteSearchAutocomplete />
                {/*
                <input className="text-field-2" data-name="Name" id="search" maxLength="256"
                    name="name" placeholder="Search " type="text"/>
               
                <input className={ `submit-button w-button` } data-wait="Please wait..." type="submit"
                value="GO"/> */}
               </div>
        </form>
    </div>
    ;

function TopBar() {
    return (
        <header className="navigation-bar">

            <div className="container">
                <Logo />
                <SiteHeading />
                <div className="mobile-button">
                    <img alt="menu" src={mobileButton} />
                </div>
                <SearchBox />
            </div>
            <div className="w-nav-overlay" data-wf-ignore=""/>
        </header>
   
    );
}

export default TopBar;